===============================================================================
Paraphrase ver.0.96　同梱ファイル情報　by Koji Iigura
===============================================================================

-------------------------------------------------------------------------------
ビルド済みパッケージに同梱されているもの
-------------------------------------------------------------------------------

Paraphrase
  +- FILES.txt <-------------------- 本文書（このファイル）
  +- LICENSE <---------------------- ライセンスについてのテキストファイル
  +- README.md <-------------------- Paraphrase の概要等
  +- appx <------------------------- 付録
  |    +- vim <--------------------- vim 用シンタックスハイライト関連ファイル
  |         +- ftdetect <----------- ファイルタイプ認識用ファイル
  |         |    +- p8e.vim <------- .p8e 拡張子指定ファイル
  |         +- syntax <------------- キーワード指定ファイル
  |              +- p8e.vim <------- キーワード登録ファイル
  +- docs <------------------------- ドキュメント
  |    +- README.html <------------- README.md の HTML 版
  |    +- ext <--------------------- 拡張辞書関連文書
  |    |    +- ext.css <------------ 拡張辞書の説明で用いる css ファイル
  |    |    +- extAOP.html <-------- AOP のサンプルで用いる外部関数の説明文書
  |    |    +- extFactor.html <----- extFactor.{so | dll} の説明文書
  |    |    +- extLP.html <--------- extLP.{so | dll} の説明文書
  |    |    +- extStdCode.html <---- 標準コードの説明文書
  |    +- index.html <-------------- 文書ファイルの取りまとめ用 HTML ファイル
  |    +- para.html <--------------- 処理系 para に関する説明文書
  |    +- readme.css <-------------- README.html 用 css ファイル
  |    +- release-notes.md <-------- リリースノート
  |    +- release-notes_Japanese.md  リリースノート（日本語版）
  |    +- top.css <----------------- docs/index.html 用 css ファイル
  |    +- typedValue <-------------- 値に関するドキュメントディレクトリ
  |    |    +- index.html <--------- 値として使用できる情報の一覧（概要）
  |    |    +- string.html <-------- 文字列に関する説明文書
  |    |    +- typedValue.css <----- 値の説明で用いる css ファイル
  |    +- words <------------------- ワードに関するものを集めたディレクトリ
  |         +- index.html <--------- 全ワード辞典（リファレンスマニュアル）
  |         +- words.css <---------- 上記リファレンスマニュアル用 CSS ファイル
  +- ext <-------------------------- 拡張辞書を格納するディレクトリ
  |    +- extAOP.{so | dll} <------- docol ラップ用関数の動的ライブラリ（参考）
  |    +- extFactor.{so | dll} <---- factor 型の if 文等を格納した拡張辞書(参考)
  |    +- extLP.{so | dll} <-------- 簡易文芸的プログラミング用拡張辞書(参考)
  |    +- extStdCode.{so | dll} <--- 標準コード用動的ライブラリ（参考）
  +- libPP.{so | dll} <------------- Paraphrase インタプリタ用動的ライブラリ
  +- para{.exe} <------------------- Paraphrase インタプリタ（言語処理系）
  +- samples <---------------------- サンプルプログラム格納用ディレクトリ
       +- SAMPLES.txt <------------- サンプルプログラムの概要説明
       +- 99.p8e <------------------ 九九を表示するプログラム
       +- FizzBuzz.p8e <------------ いわゆる FizzBuzz 問題用ワード
       +- Mersenne.p8e <------------ メルセンヌ数の素数性判定プログラム
       +- PE10mt.p8e <-------------- 200 万以下の全ての素数の和を求める
       +- PE21mt.p8e <-------------- 友愛数を並列にて計算するプログラム
       +- PE25.p8e <---------------- フィボナッチ数列に関するプログラム
       +- PE56.p8e <---------------- Project Euler No.56 を解くプログラム
       +- PolishNotation.p8e <------ 前置記法の例
       +- aop.p8e <----------------- アスペクト指向プログラミングの例
       +- attr.p8e <---------------- 属性を用いた単体テストの例
       +- check-scriptFile-args.p8e  コマンドライン引数の確認用
       +- countPrimeMT-short.p8e <-- 1 から 1000 万までの素数を数えます
       +- dumpMPmt.p8e <------------ 1 から 1000 までのメルセンヌ素数を表示します
       +- dynamic-scoping.p8e <----- ダイナミックスコーピングのテストプログラム
       +- fact-tr.p8e <------------- 末尾再帰最適化の例
       +- failure.p8e <------------- 必ず失敗するサンプルプログラム（テスト用）
       +- fastInvSqrt.p8e <--------- 型キャストの応用例
       +- isPrime.p8e <------------- サンプルプログラムで読み込まれる補助ファイル
       +- join.p8e <---------------- ワード join のテストプログラム
       +- lisp <-------------------- Lisp インタプリタ LisP8E 関連ディレクトリ
       |    +- debug-util.p8e <----- LisP8E デバッグ用ワード
       |    +- lis.p8e <------------ LisP8E インタプリタ
       |    +- test-lis.p8e <------- LisP8E テストプログラム
       +- mabdelbrot.p8e <---------- シングルスレッド版マンデルブロ集合描画プログラム
       +- mabdelbrotMT.p8e <-------- マルチスレッド版マンデルブロ集合描画プログラム
       +- pass.p8e <---------------- 必ず成功するサンプルプログラム（テスト用）
       +- pseudo_shebang.bat <------ Windows にて shebang を実現する例
       +- shebang_example <--------- Linux, macOS においてスクリプトとして実行する例
       +- test.bat <---------------- Windows 用テストドライバ
       +- zdk.p8e <----------------- いわゆるズンドコキヨシ問題のプログラム
       +- zdk2.p8e <---------------- 相互参照を用いたズンドコキヨシの実装例

-------------------------------------------------------------------------------
ソースコード一式に同梱されているもの
-------------------------------------------------------------------------------
上記ビルド済みパッケージ版からバイナリ（実行形式および動的リンクライブラリ）を
取り除き、代わりに以下のファイルを追加したものとなっています。

paraphrase
  +- BUILD.txt <-------------------- ビルド方法を示したメモ  
  +- src <-------------------------- ソースコード格納ディレクトリ
       +- Makefile <---------------- Linux, MacOS 用 Makefile
       +- dict <-------------------- 各種ワード関連用ソース格納ディレクトリ
       |    +- Makefile <----------- ワード関連 Makefile
       |    +- dictAOP.cpp <-------- アスペクト指向関連ワード
       |    +- dictArray.cpp <------ 配列関連ワード
       |    +- dictAssoc.cpp <------ 連想配列関連ワード
       |    +- dictControl.cpp <---- 制御構造関連ワード
       |    +- dictDebug.cpp <------ デバッガ関連ワード
       |    +- dictIO.cpp <--------- 入出力関連ワード
       |    +- dictLangSys.cpp <---- 局所変数等、言語システム関連ワード
       |    +- dictList.cpp <------- リスト関連ワード
       |    +- dictLocalVar.cpp <--- 局所変数関連ワード
       |    +- dictMath.cpp <------- 数学関数ワード
       |    +- dictObject.cpp <----- 型情報等に関するワード
       |    +- dictOptimize.cpp <--- 最適化のために用意されているワード
       |    +- dictParallel.cpp <--- 並列処理関連ワード
       |    +- dictStack.cpp <------ スタック操作関連ワード
       |    +- dictString.cpp <----- 文字列関連ワード
       |    +- dictType.cpp <------- 型変換関連ワード
       |    +- dictWord.cpp <------- ワード定義用関連ワード
       |    +- ext <---------------- 拡張辞書関連ディレクトリ
       |         +- Makefile <------ 拡張辞書関連 Makefile
       |         +- extAOP.cpp <---- docol ラップ用関数
       |         +- extFactor.cpp <- Factor 風 if 文用拡張辞書
       |         +- extLP.cpp <----- 簡易文芸的プログラミング用拡張辞書
       |         +- extStdCode <---- stdCode の例
       +- inc <--------------------- ヘッダファイル格納ディレクトリ
       |    +- array.h <------------ 配列オブジェクト定義用テンプレート
       |    +- chan.h <------------- チャネルマネージャの定義
       |    +- context.h <---------- コンテキスト(*1) の定義
       |    +- dictMan.h <---------- 辞書管理関連関数のプロトタイプ宣言
       |    +- errorID.h <---------- エラー ID の定義
       |    +- externals.h <-------- グローバル関数などの宣言
       |    +- file.h <------------- ファイルオブジェクトの定義
       |    +- inner.h <------------ 内部インタプリタ（VM のエンジン部分）
       |    +- lvop.h <------------- 局所変数オペレータ
       |    +- mathMacro.h <-------- 数学関連ワード定義用マクロ
       |    +- optimizer.h <-------- オプティマイザ用プロトタイプ宣言
       |    +- outer.h <------------ 外部インタプリタ（内部インタプリタのドライバ）
       |    +- paraphrase.h <------- ワード定義用プロトタイプ宣言
       |    +- stack.h <------------ スタックおよびスタック操作関数
       |    +- thread.h <----------- マルチプラットフォーム用スレッドラッパ
       |    +- threadMan.h <-------- スレッド管理用プロトタイプ宣言
       |    +- typedValue.h <------- スタックにプッシュ可能な値の定義（型付値）
       |    +- util.h <------------- ユーティリティ関数用宣言
       |    +- word.h <------------- ワード型の定義
       +- lang <-------------------- 言語コア部格納ディレクトリ
       |    +- Makefile <----------- 言語コア部 Makefile
       |    +- chan.cpp <----------- チャネルマネージャ ChanMan 実装部
       |    +- context.cpp <-------- コンテキスト（*1）実装部
       |    +- dictMan.cpp <-------- ワード登録（辞書管理）関連関数の実装部
       |    +- errorMessage.cpp <--- エラーメッセージ実装部
       |    +- inner.cpp <---------- 内部インタプリタ実装部
       |    +- langSys.cpp <-------- 言語システムで使用するグローバル変数の実装部
       |    +- optimizer.cpp <------ 最適化処理実装部
       |    +- outer.cpp <---------- 外部インタプリタ実装部
       |    +- para.cpp <----------- Paraphrase インタプリタ（REPL 部）実装部
       |    +- stack.cpp <---------- スタック表示
       |    +- threadMan.cpp <------ スレッド管理（スレッド回収）実装部
       |    +- typedValue.cpp <----- スタックにプッシュ可能な値関連の実装部
       |    +- util.cpp <----------- ユーティリティ関数実装部
       |    +- word.cpp <----------- ワード型関連実装部
       +- windows <----------------- Visual Studio 関連ファイル格納部
            +- ext <---------------- ext プロジェクト格納ディレクトリ
            |    +- extAOP <-------- extAOP プロジェクトディレクトリ
            |    |    +- dllmain.cpp extAOP.dll 用 dllmain
            |    |    +- extAOP.vcxproj  extAOP.dll 用プロジェクトファイル
            |    +- extFactor <----- extFactor プロジェクトディレクトリ
            |    |    +- dllmain.cpp extFactor.dll 用 dllmain
            |    |    +- extFactor.vcxproj  extFactor.dll 用プロジェクトファイル
            |    +- extLP <--------- extLP プロジェクトディレクトリ
            |    |    +- dllmain.cpp extLP.dll 用 dllmain
            |    |    +- extLP.vcxproj  extLP.dll 用プロジェクトファイル
            |    +- extStdCode ----- extStdCode プロジェクトディレクトリ
            |         +- dllmain.cpp extStdCode.dll 用 dllmain
            |         +- extStdCode.vcxproj  extStdCode.dll 用プロジェクトファイル
            +- libPP <-------------- Paraphrase インタプリタの実体格納ディレクトリ
            |    +- dllmain.cpp <--- libPP.dll 用 dllmain
            |    +- libPP.vcxproj <- libPP.dll 用プロジェクトファイル
            +- paraphrase.sln <----- Paraphrase 用ソリューションファイル
            +- paraphrase.vcxproj <- para.exe 用プロジェクトファイル

*1 コンテキスト＝内部インタプリタと連携することにより Virtual Machine を構成します。
　 内部インタプリタは実行部分であり、コンテキストはデータ部分を指します。
　 コンテキストには、スタックおよび定義中のワード等が保持されます。

